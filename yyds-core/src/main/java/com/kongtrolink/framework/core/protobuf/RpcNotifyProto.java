// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minifsu_notify_service.proto

package com.kongtrolink.framework.core.protobuf;

public final class RpcNotifyProto {
  private RpcNotifyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code com.kongtrolink.core.MessageType}
   *
   * <pre>
   *消息类型
   * </pre>
   */
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>REQUEST = 0;</code>
     *
     * <pre>
     *请求
     * </pre>
     */
    REQUEST(0, 0),
    /**
     * <code>RESPONSE = 1;</code>
     *
     * <pre>
     *响应
     * </pre>
     */
    RESPONSE(1, 1),
    /**
     * <code>ERROR = 2;</code>
     *
     * <pre>
     * 错误
     * </pre>
     */
    ERROR(2, 2),
    ;

    /**
     * <code>REQUEST = 0;</code>
     *
     * <pre>
     *请求
     * </pre>
     */
    public static final int REQUEST_VALUE = 0;
    /**
     * <code>RESPONSE = 1;</code>
     *
     * <pre>
     *响应
     * </pre>
     */
    public static final int RESPONSE_VALUE = 1;
    /**
     * <code>ERROR = 2;</code>
     *
     * <pre>
     * 错误
     * </pre>
     */
    public static final int ERROR_VALUE = 2;


    public final int getNumber() { return value; }

    public static MessageType valueOf(int value) {
      switch (value) {
        case 0: return REQUEST;
        case 1: return RESPONSE;
        case 2: return ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RpcNotifyProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final MessageType[] VALUES = values();

    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kongtrolink.core.MessageType)
  }

  /**
   * Protobuf enum {@code com.kongtrolink.core.PayloadType}
   *
   * <pre>
   *消息流
   * </pre>
   */
  public enum PayloadType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>JSON = 0;</code>
     *
     * <pre>
     *JSON响应报文
     * </pre>
     */
    JSON(0, 0),
    /**
     * <code>STRING = 1;</code>
     *
     * <pre>
     *文本响应报文
     * </pre>
     */
    STRING(1, 1),
    /**
     * <code>BYTE = 2;</code>
     *
     * <pre>
     * 字节流响应报文
     * </pre>
     */
    BYTE(2, 2),
    ;

    /**
     * <code>JSON = 0;</code>
     *
     * <pre>
     *JSON响应报文
     * </pre>
     */
    public static final int JSON_VALUE = 0;
    /**
     * <code>STRING = 1;</code>
     *
     * <pre>
     *文本响应报文
     * </pre>
     */
    public static final int STRING_VALUE = 1;
    /**
     * <code>BYTE = 2;</code>
     *
     * <pre>
     * 字节流响应报文
     * </pre>
     */
    public static final int BYTE_VALUE = 2;


    public final int getNumber() { return value; }

    public static PayloadType valueOf(int value) {
      switch (value) {
        case 0: return JSON;
        case 1: return STRING;
        case 2: return BYTE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PayloadType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PayloadType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PayloadType>() {
            public PayloadType findValueByNumber(int number) {
              return PayloadType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RpcNotifyProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final PayloadType[] VALUES = values();

    public static PayloadType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PayloadType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kongtrolink.core.PayloadType)
  }

  /**
   * Protobuf enum {@code com.kongtrolink.core.ErrorCode}
   */
  public enum ErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NO_ERROR = 0;</code>
     *
     * <pre>
     *无错误
     * </pre>
     */
    NO_ERROR(0, 0),
    /**
     * <code>WRONG_PROTO = 1;</code>
     *
     * <pre>
     *错误的proto文件
     * </pre>
     */
    WRONG_PROTO(1, 1),
    /**
     * <code>NO_SERVICE = 2;</code>
     *
     * <pre>
     *未知service
     * </pre>
     */
    NO_SERVICE(2, 2),
    /**
     * <code>NO_METHOD = 3;</code>
     *
     * <pre>
     * 未知方法
     * </pre>
     */
    NO_METHOD(3, 3),
    /**
     * <code>INVALID_REQUEST = 4;</code>
     *
     * <pre>
     *无效的请求
     * </pre>
     */
    INVALID_REQUEST(4, 4),
    /**
     * <code>INVALID_RESPONSE = 5;</code>
     *
     * <pre>
     *无效的响应
     * </pre>
     */
    INVALID_RESPONSE(5, 5),
    /**
     * <code>TIMEOUT = 6;</code>
     *
     * <pre>
     *超时请求
     * </pre>
     */
    TIMEOUT(6, 6),
    ;

    /**
     * <code>NO_ERROR = 0;</code>
     *
     * <pre>
     *无错误
     * </pre>
     */
    public static final int NO_ERROR_VALUE = 0;
    /**
     * <code>WRONG_PROTO = 1;</code>
     *
     * <pre>
     *错误的proto文件
     * </pre>
     */
    public static final int WRONG_PROTO_VALUE = 1;
    /**
     * <code>NO_SERVICE = 2;</code>
     *
     * <pre>
     *未知service
     * </pre>
     */
    public static final int NO_SERVICE_VALUE = 2;
    /**
     * <code>NO_METHOD = 3;</code>
     *
     * <pre>
     * 未知方法
     * </pre>
     */
    public static final int NO_METHOD_VALUE = 3;
    /**
     * <code>INVALID_REQUEST = 4;</code>
     *
     * <pre>
     *无效的请求
     * </pre>
     */
    public static final int INVALID_REQUEST_VALUE = 4;
    /**
     * <code>INVALID_RESPONSE = 5;</code>
     *
     * <pre>
     *无效的响应
     * </pre>
     */
    public static final int INVALID_RESPONSE_VALUE = 5;
    /**
     * <code>TIMEOUT = 6;</code>
     *
     * <pre>
     *超时请求
     * </pre>
     */
    public static final int TIMEOUT_VALUE = 6;


    public final int getNumber() { return value; }

    public static ErrorCode valueOf(int value) {
      switch (value) {
        case 0: return NO_ERROR;
        case 1: return WRONG_PROTO;
        case 2: return NO_SERVICE;
        case 3: return NO_METHOD;
        case 4: return INVALID_REQUEST;
        case 5: return INVALID_RESPONSE;
        case 6: return TIMEOUT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
            public ErrorCode findValueByNumber(int number) {
              return ErrorCode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return RpcNotifyProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final ErrorCode[] VALUES = values();

    public static ErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ErrorCode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:com.kongtrolink.core.ErrorCode)
  }

  public interface RpcMessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .com.kongtrolink.core.MessageType type = 1;
    /**
     * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    RpcNotifyProto.MessageType getType();

    // optional string msgId = 2;
    /**
     * <code>optional string msgId = 2;</code>
     *
     * <pre>
     *通信的全局唯一标识
     * </pre>
     */
    boolean hasMsgId();
    /**
     * <code>optional string msgId = 2;</code>
     *
     * <pre>
     *通信的全局唯一标识
     * </pre>
     */
    java.lang.String getMsgId();
    /**
     * <code>optional string msgId = 2;</code>
     *
     * <pre>
     *通信的全局唯一标识
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgIdBytes();

    // optional string service = 3;
    /**
     * <code>optional string service = 3;</code>
     *
     * <pre>
     *请求执行服务
     * </pre>
     */
    boolean hasService();
    /**
     * <code>optional string service = 3;</code>
     *
     * <pre>
     *请求执行服务
     * </pre>
     */
    java.lang.String getService();
    /**
     * <code>optional string service = 3;</code>
     *
     * <pre>
     *请求执行服务
     * </pre>
     */
    com.google.protobuf.ByteString
        getServiceBytes();

    // optional string method = 4;
    /**
     * <code>optional string method = 4;</code>
     *
     * <pre>
     *请求执行执行方法
     * </pre>
     */
    boolean hasMethod();
    /**
     * <code>optional string method = 4;</code>
     *
     * <pre>
     *请求执行执行方法
     * </pre>
     */
    java.lang.String getMethod();
    /**
     * <code>optional string method = 4;</code>
     *
     * <pre>
     *请求执行执行方法
     * </pre>
     */
    com.google.protobuf.ByteString
        getMethodBytes();

    // required .com.kongtrolink.core.PayloadType payloadType = 7;
    /**
     * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
     *
     * <pre>
     *消息流类型
     * </pre>
     */
    boolean hasPayloadType();
    /**
     * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
     *
     * <pre>
     *消息流类型
     * </pre>
     */
    RpcNotifyProto.PayloadType getPayloadType();

    // optional string payload = 5;
    /**
     * <code>optional string payload = 5;</code>
     *
     * <pre>
     *请求报文
     * </pre>
     */
    boolean hasPayload();
    /**
     * <code>optional string payload = 5;</code>
     *
     * <pre>
     *请求报文
     * </pre>
     */
    java.lang.String getPayload();
    /**
     * <code>optional string payload = 5;</code>
     *
     * <pre>
     *请求报文
     * </pre>
     */
    com.google.protobuf.ByteString
        getPayloadBytes();

    // optional bytes bytePayload = 8;
    /**
     * <code>optional bytes bytePayload = 8;</code>
     *
     * <pre>
     *流报文
     * </pre>
     */
    boolean hasBytePayload();
    /**
     * <code>optional bytes bytePayload = 8;</code>
     *
     * <pre>
     *流报文
     * </pre>
     */
    com.google.protobuf.ByteString getBytePayload();

    // optional .com.kongtrolink.core.ErrorCode error = 6;
    /**
     * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    boolean hasError();
    /**
     * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    RpcNotifyProto.ErrorCode getError();

    // optional string uuid = 9;
    /**
     * <code>optional string uuid = 9;</code>
     *
     * <pre>
     *uuid
     * </pre>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 9;</code>
     *
     * <pre>
     *uuid
     * </pre>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 9;</code>
     *
     * <pre>
     *uuid
     * </pre>
     */
    com.google.protobuf.ByteString
        getUuidBytes();
  }
  /**
   * Protobuf type {@code com.kongtrolink.core.RpcMessage}
   */
  public static final class RpcMessage extends
      com.google.protobuf.GeneratedMessage
      implements RpcMessageOrBuilder {
    // Use RpcMessage.newBuilder() to construct.
    private RpcMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RpcMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RpcMessage defaultInstance;
    public static RpcMessage getDefaultInstance() {
      return defaultInstance;
    }

    public RpcMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RpcMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              RpcNotifyProto.MessageType value = RpcNotifyProto.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              msgId_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              service_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              method_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000020;
              payload_ = input.readBytes();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              RpcNotifyProto.ErrorCode value = RpcNotifyProto.ErrorCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                error_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              RpcNotifyProto.PayloadType value = RpcNotifyProto.PayloadType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                payloadType_ = value;
              }
              break;
            }
            case 66: {
              bitField0_ |= 0x00000040;
              bytePayload_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              uuid_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RpcNotifyProto.internal_static_com_kongtrolink_core_RpcMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RpcNotifyProto.internal_static_com_kongtrolink_core_RpcMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RpcNotifyProto.RpcMessage.class, RpcNotifyProto.RpcMessage.Builder.class);
    }

    public static com.google.protobuf.Parser<RpcMessage> PARSER =
        new com.google.protobuf.AbstractParser<RpcMessage>() {
      public RpcMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RpcMessage(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RpcMessage> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .com.kongtrolink.core.MessageType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private RpcNotifyProto.MessageType type_;
    /**
     * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
     *
     * <pre>
     *消息类型
     * </pre>
     */
    public RpcNotifyProto.MessageType getType() {
      return type_;
    }

    // optional string msgId = 2;
    public static final int MSGID_FIELD_NUMBER = 2;
    private java.lang.Object msgId_;
    /**
     * <code>optional string msgId = 2;</code>
     *
     * <pre>
     *通信的全局唯一标识
     * </pre>
     */
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string msgId = 2;</code>
     *
     * <pre>
     *通信的全局唯一标识
     * </pre>
     */
    public java.lang.String getMsgId() {
      java.lang.Object ref = msgId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgId = 2;</code>
     *
     * <pre>
     *通信的全局唯一标识
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgIdBytes() {
      java.lang.Object ref = msgId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string service = 3;
    public static final int SERVICE_FIELD_NUMBER = 3;
    private java.lang.Object service_;
    /**
     * <code>optional string service = 3;</code>
     *
     * <pre>
     *请求执行服务
     * </pre>
     */
    public boolean hasService() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string service = 3;</code>
     *
     * <pre>
     *请求执行服务
     * </pre>
     */
    public java.lang.String getService() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          service_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string service = 3;</code>
     *
     * <pre>
     *请求执行服务
     * </pre>
     */
    public com.google.protobuf.ByteString
        getServiceBytes() {
      java.lang.Object ref = service_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        service_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string method = 4;
    public static final int METHOD_FIELD_NUMBER = 4;
    private java.lang.Object method_;
    /**
     * <code>optional string method = 4;</code>
     *
     * <pre>
     *请求执行执行方法
     * </pre>
     */
    public boolean hasMethod() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string method = 4;</code>
     *
     * <pre>
     *请求执行执行方法
     * </pre>
     */
    public java.lang.String getMethod() {
      java.lang.Object ref = method_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          method_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string method = 4;</code>
     *
     * <pre>
     *请求执行执行方法
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMethodBytes() {
      java.lang.Object ref = method_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        method_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .com.kongtrolink.core.PayloadType payloadType = 7;
    public static final int PAYLOADTYPE_FIELD_NUMBER = 7;
    private RpcNotifyProto.PayloadType payloadType_;
    /**
     * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
     *
     * <pre>
     *消息流类型
     * </pre>
     */
    public boolean hasPayloadType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
     *
     * <pre>
     *消息流类型
     * </pre>
     */
    public RpcNotifyProto.PayloadType getPayloadType() {
      return payloadType_;
    }

    // optional string payload = 5;
    public static final int PAYLOAD_FIELD_NUMBER = 5;
    private java.lang.Object payload_;
    /**
     * <code>optional string payload = 5;</code>
     *
     * <pre>
     *请求报文
     * </pre>
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string payload = 5;</code>
     *
     * <pre>
     *请求报文
     * </pre>
     */
    public java.lang.String getPayload() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          payload_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string payload = 5;</code>
     *
     * <pre>
     *请求报文
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPayloadBytes() {
      java.lang.Object ref = payload_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        payload_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bytes bytePayload = 8;
    public static final int BYTEPAYLOAD_FIELD_NUMBER = 8;
    private com.google.protobuf.ByteString bytePayload_;
    /**
     * <code>optional bytes bytePayload = 8;</code>
     *
     * <pre>
     *流报文
     * </pre>
     */
    public boolean hasBytePayload() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes bytePayload = 8;</code>
     *
     * <pre>
     *流报文
     * </pre>
     */
    public com.google.protobuf.ByteString getBytePayload() {
      return bytePayload_;
    }

    // optional .com.kongtrolink.core.ErrorCode error = 6;
    public static final int ERROR_FIELD_NUMBER = 6;
    private RpcNotifyProto.ErrorCode error_;
    /**
     * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
     *
     * <pre>
     *错误信息
     * </pre>
     */
    public RpcNotifyProto.ErrorCode getError() {
      return error_;
    }

    // optional string uuid = 9;
    public static final int UUID_FIELD_NUMBER = 9;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 9;</code>
     *
     * <pre>
     *uuid
     * </pre>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string uuid = 9;</code>
     *
     * <pre>
     *uuid
     * </pre>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 9;</code>
     *
     * <pre>
     *uuid
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      type_ = RpcNotifyProto.MessageType.REQUEST;
      msgId_ = "";
      service_ = "";
      method_ = "";
      payloadType_ = RpcNotifyProto.PayloadType.JSON;
      payload_ = "";
      bytePayload_ = com.google.protobuf.ByteString.EMPTY;
      error_ = RpcNotifyProto.ErrorCode.NO_ERROR;
      uuid_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayloadType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMsgIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getServiceBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getMethodBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(5, getPayloadBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(6, error_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(7, payloadType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, bytePayload_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getUuidBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMsgIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getServiceBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMethodBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPayloadBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, error_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, payloadType_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, bytePayload_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUuidBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RpcNotifyProto.RpcMessage)) {
        return super.equals(obj);
      }
      RpcNotifyProto.RpcMessage other = (RpcNotifyProto.RpcMessage) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result &&
            (getType() == other.getType());
      }
      result = result && (hasMsgId() == other.hasMsgId());
      if (hasMsgId()) {
        result = result && getMsgId()
            .equals(other.getMsgId());
      }
      result = result && (hasService() == other.hasService());
      if (hasService()) {
        result = result && getService()
            .equals(other.getService());
      }
      result = result && (hasMethod() == other.hasMethod());
      if (hasMethod()) {
        result = result && getMethod()
            .equals(other.getMethod());
      }
      result = result && (hasPayloadType() == other.hasPayloadType());
      if (hasPayloadType()) {
        result = result &&
            (getPayloadType() == other.getPayloadType());
      }
      result = result && (hasPayload() == other.hasPayload());
      if (hasPayload()) {
        result = result && getPayload()
            .equals(other.getPayload());
      }
      result = result && (hasBytePayload() == other.hasBytePayload());
      if (hasBytePayload()) {
        result = result && getBytePayload()
            .equals(other.getBytePayload());
      }
      result = result && (hasError() == other.hasError());
      if (hasError()) {
        result = result &&
            (getError() == other.getError());
      }
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
            .equals(other.getUuid());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + hashEnum(getType());
      }
      if (hasMsgId()) {
        hash = (37 * hash) + MSGID_FIELD_NUMBER;
        hash = (53 * hash) + getMsgId().hashCode();
      }
      if (hasService()) {
        hash = (37 * hash) + SERVICE_FIELD_NUMBER;
        hash = (53 * hash) + getService().hashCode();
      }
      if (hasMethod()) {
        hash = (37 * hash) + METHOD_FIELD_NUMBER;
        hash = (53 * hash) + getMethod().hashCode();
      }
      if (hasPayloadType()) {
        hash = (37 * hash) + PAYLOADTYPE_FIELD_NUMBER;
        hash = (53 * hash) + hashEnum(getPayloadType());
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      if (hasBytePayload()) {
        hash = (37 * hash) + BYTEPAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getBytePayload().hashCode();
      }
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + hashEnum(getError());
      }
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RpcNotifyProto.RpcMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static RpcNotifyProto.RpcMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static RpcNotifyProto.RpcMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static RpcNotifyProto.RpcMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(RpcNotifyProto.RpcMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.kongtrolink.core.RpcMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements RpcNotifyProto.RpcMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RpcNotifyProto.internal_static_com_kongtrolink_core_RpcMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RpcNotifyProto.internal_static_com_kongtrolink_core_RpcMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RpcNotifyProto.RpcMessage.class, RpcNotifyProto.RpcMessage.Builder.class);
      }

      // Construct using com.kongtrolink.framework.core.protobuf.RpcNotifyProto.RpcMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = RpcNotifyProto.MessageType.REQUEST;
        bitField0_ = (bitField0_ & ~0x00000001);
        msgId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        service_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        method_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        payloadType_ = RpcNotifyProto.PayloadType.JSON;
        bitField0_ = (bitField0_ & ~0x00000010);
        payload_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        bytePayload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        error_ = RpcNotifyProto.ErrorCode.NO_ERROR;
        bitField0_ = (bitField0_ & ~0x00000080);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RpcNotifyProto.internal_static_com_kongtrolink_core_RpcMessage_descriptor;
      }

      public RpcNotifyProto.RpcMessage getDefaultInstanceForType() {
        return RpcNotifyProto.RpcMessage.getDefaultInstance();
      }

      public RpcNotifyProto.RpcMessage build() {
        RpcNotifyProto.RpcMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RpcNotifyProto.RpcMessage buildPartial() {
        RpcNotifyProto.RpcMessage result = new RpcNotifyProto.RpcMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.service_ = service_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.method_ = method_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.payloadType_ = payloadType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.payload_ = payload_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bytePayload_ = bytePayload_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.error_ = error_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.uuid_ = uuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RpcNotifyProto.RpcMessage) {
          return mergeFrom((RpcNotifyProto.RpcMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RpcNotifyProto.RpcMessage other) {
        if (other == RpcNotifyProto.RpcMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasMsgId()) {
          bitField0_ |= 0x00000002;
          msgId_ = other.msgId_;
          onChanged();
        }
        if (other.hasService()) {
          bitField0_ |= 0x00000004;
          service_ = other.service_;
          onChanged();
        }
        if (other.hasMethod()) {
          bitField0_ |= 0x00000008;
          method_ = other.method_;
          onChanged();
        }
        if (other.hasPayloadType()) {
          setPayloadType(other.getPayloadType());
        }
        if (other.hasPayload()) {
          bitField0_ |= 0x00000020;
          payload_ = other.payload_;
          onChanged();
        }
        if (other.hasBytePayload()) {
          setBytePayload(other.getBytePayload());
        }
        if (other.hasError()) {
          setError(other.getError());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000100;
          uuid_ = other.uuid_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasPayloadType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RpcNotifyProto.RpcMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RpcNotifyProto.RpcMessage) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .com.kongtrolink.core.MessageType type = 1;
      private RpcNotifyProto.MessageType type_ = RpcNotifyProto.MessageType.REQUEST;
      /**
       * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public RpcNotifyProto.MessageType getType() {
        return type_;
      }
      /**
       * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public Builder setType(RpcNotifyProto.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.kongtrolink.core.MessageType type = 1;</code>
       *
       * <pre>
       *消息类型
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = RpcNotifyProto.MessageType.REQUEST;
        onChanged();
        return this;
      }

      // optional string msgId = 2;
      private java.lang.Object msgId_ = "";
      /**
       * <code>optional string msgId = 2;</code>
       *
       * <pre>
       *通信的全局唯一标识
       * </pre>
       */
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string msgId = 2;</code>
       *
       * <pre>
       *通信的全局唯一标识
       * </pre>
       */
      public java.lang.String getMsgId() {
        java.lang.Object ref = msgId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgId = 2;</code>
       *
       * <pre>
       *通信的全局唯一标识
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgIdBytes() {
        java.lang.Object ref = msgId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgId = 2;</code>
       *
       * <pre>
       *通信的全局唯一标识
       * </pre>
       */
      public Builder setMsgId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgId = 2;</code>
       *
       * <pre>
       *通信的全局唯一标识
       * </pre>
       */
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = getDefaultInstance().getMsgId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgId = 2;</code>
       *
       * <pre>
       *通信的全局唯一标识
       * </pre>
       */
      public Builder setMsgIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        msgId_ = value;
        onChanged();
        return this;
      }

      // optional string service = 3;
      private java.lang.Object service_ = "";
      /**
       * <code>optional string service = 3;</code>
       *
       * <pre>
       *请求执行服务
       * </pre>
       */
      public boolean hasService() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string service = 3;</code>
       *
       * <pre>
       *请求执行服务
       * </pre>
       */
      public java.lang.String getService() {
        java.lang.Object ref = service_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          service_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string service = 3;</code>
       *
       * <pre>
       *请求执行服务
       * </pre>
       */
      public com.google.protobuf.ByteString
          getServiceBytes() {
        java.lang.Object ref = service_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          service_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string service = 3;</code>
       *
       * <pre>
       *请求执行服务
       * </pre>
       */
      public Builder setService(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        service_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string service = 3;</code>
       *
       * <pre>
       *请求执行服务
       * </pre>
       */
      public Builder clearService() {
        bitField0_ = (bitField0_ & ~0x00000004);
        service_ = getDefaultInstance().getService();
        onChanged();
        return this;
      }
      /**
       * <code>optional string service = 3;</code>
       *
       * <pre>
       *请求执行服务
       * </pre>
       */
      public Builder setServiceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        service_ = value;
        onChanged();
        return this;
      }

      // optional string method = 4;
      private java.lang.Object method_ = "";
      /**
       * <code>optional string method = 4;</code>
       *
       * <pre>
       *请求执行执行方法
       * </pre>
       */
      public boolean hasMethod() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string method = 4;</code>
       *
       * <pre>
       *请求执行执行方法
       * </pre>
       */
      public java.lang.String getMethod() {
        java.lang.Object ref = method_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          method_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string method = 4;</code>
       *
       * <pre>
       *请求执行执行方法
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMethodBytes() {
        java.lang.Object ref = method_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          method_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string method = 4;</code>
       *
       * <pre>
       *请求执行执行方法
       * </pre>
       */
      public Builder setMethod(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        method_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string method = 4;</code>
       *
       * <pre>
       *请求执行执行方法
       * </pre>
       */
      public Builder clearMethod() {
        bitField0_ = (bitField0_ & ~0x00000008);
        method_ = getDefaultInstance().getMethod();
        onChanged();
        return this;
      }
      /**
       * <code>optional string method = 4;</code>
       *
       * <pre>
       *请求执行执行方法
       * </pre>
       */
      public Builder setMethodBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        method_ = value;
        onChanged();
        return this;
      }

      // required .com.kongtrolink.core.PayloadType payloadType = 7;
      private RpcNotifyProto.PayloadType payloadType_ = RpcNotifyProto.PayloadType.JSON;
      /**
       * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
       *
       * <pre>
       *消息流类型
       * </pre>
       */
      public boolean hasPayloadType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
       *
       * <pre>
       *消息流类型
       * </pre>
       */
      public RpcNotifyProto.PayloadType getPayloadType() {
        return payloadType_;
      }
      /**
       * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
       *
       * <pre>
       *消息流类型
       * </pre>
       */
      public Builder setPayloadType(RpcNotifyProto.PayloadType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        payloadType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .com.kongtrolink.core.PayloadType payloadType = 7;</code>
       *
       * <pre>
       *消息流类型
       * </pre>
       */
      public Builder clearPayloadType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        payloadType_ = RpcNotifyProto.PayloadType.JSON;
        onChanged();
        return this;
      }

      // optional string payload = 5;
      private java.lang.Object payload_ = "";
      /**
       * <code>optional string payload = 5;</code>
       *
       * <pre>
       *请求报文
       * </pre>
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string payload = 5;</code>
       *
       * <pre>
       *请求报文
       * </pre>
       */
      public java.lang.String getPayload() {
        java.lang.Object ref = payload_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          payload_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string payload = 5;</code>
       *
       * <pre>
       *请求报文
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPayloadBytes() {
        java.lang.Object ref = payload_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          payload_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string payload = 5;</code>
       *
       * <pre>
       *请求报文
       * </pre>
       */
      public Builder setPayload(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string payload = 5;</code>
       *
       * <pre>
       *请求报文
       * </pre>
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000020);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      /**
       * <code>optional string payload = 5;</code>
       *
       * <pre>
       *请求报文
       * </pre>
       */
      public Builder setPayloadBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        payload_ = value;
        onChanged();
        return this;
      }

      // optional bytes bytePayload = 8;
      private com.google.protobuf.ByteString bytePayload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes bytePayload = 8;</code>
       *
       * <pre>
       *流报文
       * </pre>
       */
      public boolean hasBytePayload() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes bytePayload = 8;</code>
       *
       * <pre>
       *流报文
       * </pre>
       */
      public com.google.protobuf.ByteString getBytePayload() {
        return bytePayload_;
      }
      /**
       * <code>optional bytes bytePayload = 8;</code>
       *
       * <pre>
       *流报文
       * </pre>
       */
      public Builder setBytePayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        bytePayload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes bytePayload = 8;</code>
       *
       * <pre>
       *流报文
       * </pre>
       */
      public Builder clearBytePayload() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bytePayload_ = getDefaultInstance().getBytePayload();
        onChanged();
        return this;
      }

      // optional .com.kongtrolink.core.ErrorCode error = 6;
      private RpcNotifyProto.ErrorCode error_ = RpcNotifyProto.ErrorCode.NO_ERROR;
      /**
       * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public RpcNotifyProto.ErrorCode getError() {
        return error_;
      }
      /**
       * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder setError(RpcNotifyProto.ErrorCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        error_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .com.kongtrolink.core.ErrorCode error = 6;</code>
       *
       * <pre>
       *错误信息
       * </pre>
       */
      public Builder clearError() {
        bitField0_ = (bitField0_ & ~0x00000080);
        error_ = RpcNotifyProto.ErrorCode.NO_ERROR;
        onChanged();
        return this;
      }

      // optional string uuid = 9;
      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 9;</code>
       *
       * <pre>
       *uuid
       * </pre>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string uuid = 9;</code>
       *
       * <pre>
       *uuid
       * </pre>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 9;</code>
       *
       * <pre>
       *uuid
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 9;</code>
       *
       * <pre>
       *uuid
       * </pre>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 9;</code>
       *
       * <pre>
       *uuid
       * </pre>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000100);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 9;</code>
       *
       * <pre>
       *uuid
       * </pre>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uuid_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.kongtrolink.core.RpcMessage)
    }

    static {
      defaultInstance = new RpcMessage(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.kongtrolink.core.RpcMessage)
  }

  /**
   * Protobuf service {@code com.kongtrolink.core.RpcNotify}
   *
   * <pre>
   * the meta service
   * </pre>
   */
  public static abstract class RpcNotify
      implements com.google.protobuf.Service {
    protected RpcNotify() {}

    public interface Interface {
      /**
       * <code>rpc notify(.com.kongtrolink.core.RpcMessage) returns (.com.kongtrolink.core.RpcMessage);</code>
       */
      public abstract void notify(
          com.google.protobuf.RpcController controller,
          RpcNotifyProto.RpcMessage request,
          com.google.protobuf.RpcCallback<RpcNotifyProto.RpcMessage> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new RpcNotify() {
        @java.lang.Override
        public  void notify(
            com.google.protobuf.RpcController controller,
            RpcNotifyProto.RpcMessage request,
            com.google.protobuf.RpcCallback<RpcNotifyProto.RpcMessage> done) {
          impl.notify(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.notify(controller, (RpcNotifyProto.RpcMessage)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return RpcNotifyProto.RpcMessage.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return RpcNotifyProto.RpcMessage.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc notify(.com.kongtrolink.core.RpcMessage) returns (.com.kongtrolink.core.RpcMessage);</code>
     */
    public abstract void notify(
        com.google.protobuf.RpcController controller,
        RpcNotifyProto.RpcMessage request,
        com.google.protobuf.RpcCallback<RpcNotifyProto.RpcMessage> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return RpcNotifyProto.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.notify(controller, (RpcNotifyProto.RpcMessage)request,
            com.google.protobuf.RpcUtil.<RpcNotifyProto.RpcMessage>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return RpcNotifyProto.RpcMessage.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return RpcNotifyProto.RpcMessage.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends RpcNotifyProto.RpcNotify implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void notify(
          com.google.protobuf.RpcController controller,
          RpcNotifyProto.RpcMessage request,
          com.google.protobuf.RpcCallback<RpcNotifyProto.RpcMessage> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          RpcNotifyProto.RpcMessage.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            RpcNotifyProto.RpcMessage.class,
            RpcNotifyProto.RpcMessage.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public RpcNotifyProto.RpcMessage notify(
          com.google.protobuf.RpcController controller,
          RpcNotifyProto.RpcMessage request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public RpcNotifyProto.RpcMessage notify(
          com.google.protobuf.RpcController controller,
          RpcNotifyProto.RpcMessage request)
          throws com.google.protobuf.ServiceException {
        return (RpcNotifyProto.RpcMessage) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          RpcNotifyProto.RpcMessage.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:com.kongtrolink.core.RpcNotify)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kongtrolink_core_RpcMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kongtrolink_core_RpcMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034minifsu_notify_service.proto\022\024com.kong" +
      "trolink.core\"\211\002\n\nRpcMessage\022/\n\004type\030\001 \002(" +
      "\0162!.com.kongtrolink.core.MessageType\022\r\n\005" +
      "msgId\030\002 \001(\t\022\017\n\007service\030\003 \001(\t\022\016\n\006method\030\004" +
      " \001(\t\0226\n\013payloadType\030\007 \002(\0162!.com.kongtrol" +
      "ink.core.PayloadType\022\017\n\007payload\030\005 \001(\t\022\023\n" +
      "\013bytePayload\030\010 \001(\014\022.\n\005error\030\006 \001(\0162\037.com." +
      "kongtrolink.core.ErrorCode\022\014\n\004uuid\030\t \001(\t" +
      "*3\n\013MessageType\022\013\n\007REQUEST\020\000\022\014\n\010RESPONSE" +
      "\020\001\022\t\n\005ERROR\020\002*-\n\013PayloadType\022\010\n\004JSON\020\000\022\n",
      "\n\006STRING\020\001\022\010\n\004BYTE\020\002*\201\001\n\tErrorCode\022\014\n\010NO" +
      "_ERROR\020\000\022\017\n\013WRONG_PROTO\020\001\022\016\n\nNO_SERVICE\020" +
      "\002\022\r\n\tNO_METHOD\020\003\022\023\n\017INVALID_REQUEST\020\004\022\024\n" +
      "\020INVALID_RESPONSE\020\005\022\013\n\007TIMEOUT\020\0062Y\n\tRpcN" +
      "otify\022L\n\006notify\022 .com.kongtrolink.core.R" +
      "pcMessage\032 .com.kongtrolink.core.RpcMess" +
      "ageBE\n\'com.kongtrolink.framework.core.pr" +
      "otobufB\016RpcNotifyProto\200\001\001\210\001\001\220\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kongtrolink_core_RpcMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kongtrolink_core_RpcMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kongtrolink_core_RpcMessage_descriptor,
              new java.lang.String[] { "Type", "MsgId", "Service", "Method", "PayloadType", "Payload", "BytePayload", "Error", "Uuid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
