spring:
  application:
    name: yytd-alarm-server
server:
  name: ALARM_SERVER #服务编码
  version: 1.0.0 #服务版本,可以扩展为 * app
  port: 18081 #服务占用web端口 占用拦截{/mqtt/*,/register*}
#jarResources:
#  path: ./jarResources #可选配置 jar包和jarRes.yml资源配置文件存放路径 默认为./jarResources
register:
  scanBasePackage: com.kongtrolink.framework.api #默认配置com.kongtrolink.framework 如果项目的包名不一致需要手动配置
  url: zookeeper://172.16.5.26:2181,172.16.5.26:2182,172.16.5.26:2183 #开发态的服务和云管服务配置，开发态服务可以不依赖云管进行部分功能服务的开发
mqtt:
  username: root #可选配置 mqtt配置相关
  password: 123456 #可选配置 mqtt配置相关
  url: tcp://172.16.5.26:1883 #推送信息的连接地址，如果有多个，用逗号隔开，如：tcp://127.0.0.1:61613,tcp://192.168.1.61:61613

mongodb:
#  uri: mongodb://mini-fsu-db:123456@172.16.5.228:27017/mini-fsu-db
  uri: mongodb://scloud:123456@172.16.6.9:27017/scloud-product

  ###########日志配置###########
#logging:
#  level:
#    root: info
#    com.kongtrolink.framework: DEBUG
#    org.apache.hadoop.util.Shell: OFF
#    org.mongodb.driver.*: OFF
#    org.apache.zookeeper.ZooKeeper: OFF
#  pattern:
#    console: "%clr(%d{MM-dd HH:mm:ss.SSS}){faint} %clr(${server.name} ${LOG_LEVEL_PATTERN}) %clr(${PID:- }){magenta} %clr([%5.5t]){faint} %clr(%-20.20logger{39} %5.5line){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"
#    file: "%clr(%d{MM-dd HH:mm:ss.SSS}){faint} %clr(${server.name} ${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr([%5.5t]){faint} %clr(%-20.20{39} %5.5line){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"
